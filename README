This is a collection of stuff to help building iOS app with Gauche.
We're still in experimental stage.  Many desired features are missing.


Building frameworks:

  Prerequisites: You need Gauche HEAD installed on your Mac.

  Gauche-iOS-core.framework

    A Gauche engine packaged as a framework for iOS.

    You can build it by running "make core" in this directory.
    It will clone Gauche repo, build the framework, and put it
    in this directory.

    To use it, add this framework to "Linked Frameworks and Libraries"
    section of General tab in your XCode project.
    You also need to add libiconv.dylib and libz.dylib.

    This only allows iOS app to call Gauche core functionalities; it
    doesn't provide a way to control iOS components from Gauche.
    We're working on another framework that allows it.

    NOTE: Currently, this framework is built without bitcode enabled;
    If you use this framework on your project, you need to turn off
    bitcode (In Built Settings > Built Options > Enable Bitcode) or
    the linker fails.


Samples:

  samples/Gauche-workbench

    This builds a bare bone iOS App with Gauche REPL server open to
    the network.  No UI.  You can evaluate Gauche expressions 
    interactively on the actual device.
    There's no security, so this is stricly for testing in your local
    environment.  Do not run this while you're outside of your lab.
    You need WiFi connection.

    When invoked, it displays "To get REPL, connect to X.X.X.X:YY,
    and enter key code ZZZZZZ".  You can make a TCP connection to
    the displayed IP addr and port number, e.g. using "telnet X.X.X.X YY".
    It prompts you to enter the key code displayed on the screen
    (a very simple security measure to avoid casual port scanners).

    Note: If you evaluate (exit) in REPL prompt, it terminates the
    app.  To exit REPL but keep the app running for the next connection,
    just drop the connection from the client.  (With telnet, type "^]q".)
    The current implementation intentionally does not handle multiple
    connections simultaneously.

